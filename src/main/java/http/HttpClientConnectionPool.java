package http;

import org.apache.http.HttpVersion;
import org.apache.http.client.HttpClient;
import org.apache.http.conn.scheme.PlainSocketFactory;
import org.apache.http.conn.scheme.Scheme;
import org.apache.http.conn.scheme.SchemeRegistry;
import org.apache.http.conn.ssl.SSLSocketFactory;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;
import org.apache.http.params.BasicHttpParams;
import org.apache.http.params.CoreConnectionPNames;
import org.apache.http.params.CoreProtocolPNames;
import org.apache.http.params.HttpParams;
import org.apache.http.params.HttpProtocolParams;

public class HttpClientConnectionPool {

	private static ThreadSafeClientConnManager cm = null;
	
	static {
		//ï¿½ï¿½Ê¼ï¿½ï¿½SchemeRegistry,ï¿½ï¿½ï¿½Ã·ï¿½ï¿½ï¿½Ð­ï¿½ï¿½
		//Schemeï¿½ï¿½ï¿½Ê¾Ò»ï¿½ï¿½Ð­ï¿½é·½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?"http"ï¿½ï¿½ï¿½ï¿½"https"ï¿½Í°ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ð­ï¿½ï¿½ï¿½ï¿½ï¿½Ô£ï¿½
		//ï¿½ï¿½ï¿½ï¿½È±Ê¡ï¿½Ä¶Ë¿Úºï¿½socketï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ÎªÖ¸ï¿½ï¿½ï¿½ï¿½Ð­ï¿½é´´ï¿½ï¿½java.net.SocketÊµï¿½ï¿½ï¿½ï¿½SchemeRegistryï¿½à±»ï¿½ï¿½ï¿½ï¿½Î¬ï¿½ï¿½Ò»ï¿½ï¿½Schemesï¿½Ä¼ï¿½ï¿½ï¿½
		SchemeRegistry schemeRegistry = new SchemeRegistry();  
		schemeRegistry.register(new Scheme("http", PlainSocketFactory.getSocketFactory(), 80));
		schemeRegistry.register(new Scheme("https", SSLSocketFactory.getSocketFactory(), 443));
        cm = new ThreadSafeClientConnManager(schemeRegistry);  
        try {
        	//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
            int maxTotal = 100;  
            cm.setMaxTotal(maxTotal);
        } catch (NumberFormatException e) {
        	e.printStackTrace();
        }  
        //Ã¿ï¿½ï¿½Í¨ï¿½ï¿½ï¿½Ä²ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ã£ï¿½ï¿½ï¿½ï¿½Ó³Ø£ï¿½  
        try {  
            int defaultMaxConnection = 50;  
            cm.setDefaultMaxPerRoute(defaultMaxConnection);  
        } catch (NumberFormatException e) {
        	e.printStackTrace();
        }  
	}
	
    public static HttpClient getHttpClient() {
    	//ï¿½ï¿½Ê¼ï¿½ï¿½HttpParamsï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
    	//HttpParamsï¿½Ó¿Ú´ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½ï¿½É¸Ä±ï¿½Öµï¿½Ä¼ï¿½ï¿½Ï£ï¿½ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ê±ï¿½ï¿½Îªï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½ï¿½ó¼¯ºÏ£ï¿½ï¿½Ã¼ï¿½ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Öµï¿½ï¿½Ó³ï¿½ä¡?
    	//HttpParamsï¿½ï¿½ï¿½ï¿½ï¿½Ç¶ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Îªï¿½ï¿½Ò»ï¿½ï¿½Ã¿ï¿½ï¿½ï¿½ï¿½ï¿½Óµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ô¼ï¿½ï¿½ï¿½HttpParamsï¿½ï¿½ï¿½ï¿½
        HttpParams params = new BasicHttpParams();
        // HTTP Ð­ï¿½ï¿½Ä°æ±?,1.1/1.0/0.9
        params.setParameter(CoreProtocolPNames.PROTOCOL_VERSION, HttpVersion.HTTP_1_1);
        params.setParameter(CoreProtocolPNames.USER_AGENT, "HttpComponents/1.1");
        params.setParameter(CoreProtocolPNames.USE_EXPECT_CONTINUE, true);
        params.setParameter(CoreProtocolPNames.HTTP_CONTENT_CHARSET, "utf-8");
        params.setParameter(CoreProtocolPNames.HTTP_ELEMENT_CHARSET, "utf-8");
        //ï¿½ï¿½ï¿½ï¿½ConnectionTimeoutï¿½ï¿½Ê±Ê±ï¿½ï¿½,ReadTimeOutï¿½ï¿½Ê±Ê±ï¿½ï¿½,3000ms
        params.setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 30000);
        params.setParameter(CoreConnectionPNames.SO_TIMEOUT, 30000);
        return new DefaultHttpClient(cm, params);  
    }  
  
    public static void release() {  
        if (cm != null) {  
            cm.shutdown();  
        }  
    }  
}
